{"name":"Shinmun","body":"Shinmun - a file based blog engine\r\n=================================\r\n\r\nShinmun is a small file based blog engine. Write posts in your favorite\r\neditor, track them with git and deploy to Heroku. Small, fast and simple.\r\n\r\n### Features\r\n\r\n* Posts are text files formatted with [Markdown][8], [Textile][9] or [HTML][10]\r\n* Deploy via [git-push][11]\r\n* Easy and fast deploying on Heroku\r\n* Index, category and archive listings\r\n* RSS feeds\r\n* Syntax highlighting provided by [CodeRay][4]\r\n\r\n\r\n### Quickstart\r\n\r\nInstall the gems:\r\n\r\n    $ gem install shinmun\r\n\r\nCreate a sample blog:\r\n\r\n    $ shinmun init myblog\r\n\r\nThis will create a directory with all necessary files. Now start the\r\nweb server:\r\n\r\n    $ cd myblog\r\n    $ rackup\r\n\r\nBrowse to the following url:\r\n\r\n    http://localhost:9292\r\n\r\nVoilÃ , your first blog is up and running!\r\n\r\n\r\n### Writing Posts\r\n\r\nPosts can be created by using the `shinmun` command inside your blog\r\nfolder:\r\n\r\n    shinmun post 'The title of the post'\r\n\r\nShinmun will then create a post file in the right place, for example\r\nin `posts/2008/9/the-title-of-the-post.md`.\r\n\r\n\r\n### Post Format\r\n\r\nEach blog post is just a text file with a YAML header and a body. The\r\nYAML header is surrounded with 2 lines of 3 dashes.\r\n\r\nThe YAML header has following attributes:\r\n\r\n* `title`: mandatory\r\n* `date`: posts need one, pages not\r\n* `category`: a post belongs to one category\r\n* `tags`: a comma separated list of tags\r\n\r\nExample post:\r\n\r\n    --- \r\n    date: 2008-09-05\r\n    category: Ruby\r\n    tags: bluecloth, markdown\r\n    title: BlueCloth, a Markdown library\r\n    ---\r\n    This is the summary, which is by definition the first paragraph of the\r\n    article. The summary shows up in category listings or the index listing.\r\n\r\n\r\n### Syntax highlighting\r\n\r\nThanks to the fantastic highlighting library [CodeRay][4], highlighted\r\ncode blocks can be embedded easily in Markdown. For Textile support\r\nyou have to require `coderay/for_redcloth`. These languages are\r\nsupported: C, Diff, Javascript, Scheme, CSS, HTML, XML, Java, JSON,\r\nRHTML, YAML, Delphi\r\n\r\nTo activate CodeRay for a code block, you have to declare the language\r\nin lower case:\r\n\r\n    @@ruby\r\n\r\n    def method_missing(id, *args, &block)\r\n      puts \"#{id} was called with #{args.inspect}\"\r\n    end             \r\n\r\n**Note that the declaration MUST be followed by a blank line!**\r\n\r\n\r\n### Directory layout\r\n\r\n    + config.ru\r\n    + pages\r\n      + about.md\r\n    + posts\r\n      + 2007\r\n      + 2008\r\n        + 9\r\n          + my-article.md\r\n    + public\r\n      + styles.css\r\n    + templates\r\n      + 404.rhtml\r\n      + archive.rhtml\r\n      + category.rhtml\r\n      + index.rhtml\r\n      + index.rxml\r\n      + layout.rhtml\r\n      + page.rhtml\r\n      + post.rhtml  \r\n\r\n### Blog configuation\r\n\r\nIn `config.ru` you can set the properties of your blog:\r\n\r\n    blog.config = {\r\n      :language => 'en',\r\n      :title => \"Blog Title\",\r\n      :author => \"The Author\",\r\n      :categories => [\"Ruby\", \"Javascript\"],\r\n      :description => \"Blog description\"\r\n    }\r\n\r\n\r\n### Templates\r\n\r\nLayout and templates are rendered by *ERB*.  The layout is defined in\r\n`templates/layout.rhtml`. The content will be provided in the variable\r\n`@content`. A minimal example:\r\n\r\n    <html>\r\n      <head>\r\n        <title><%= @blog.title %></title>\r\n        <%= stylesheet_link_tag 'style' %>\r\n      </head>\r\n      <body>\r\n         <%= @content %>\r\n      </body>\r\n     </html>\r\n\r\nThe attributes of a post are accessible via the @post variable:\r\n\r\n    <div class=\"article\">\r\n     \r\n      <h1><%= @post.title %></h1>\r\n     \r\n      <div class=\"date\">\r\n        <%= human_date @post.date %>\r\n      </div>\r\n     \r\n      <%= @post.body_html %>\r\n\r\n      ...      \r\n\r\n    </div>\r\n\r\n\r\n### Deployment on Heroku\r\n\r\nInstall the Heroku gem:\r\n\r\n    $ gem install heroku\r\n\r\nInstalling your public key:\r\n\r\n    $ heroku keys:add\r\n\r\n    Enter your Heroku credentials.\r\n    Email: joe@example.com\r\n    Password: \r\n    Uploading ssh public key /Users/joe/.ssh/id_rsa.pub\r\n\r\nCreate an app on Heroku.\r\n\r\n    $ heroku create myblog\r\n    Created http://myblog.heroku.com/ | git@heroku.com:mybblog.git\r\n    Git remote heroku added\r\n\r\nNow on your local machine, you create a new remote repository and push\r\nyour blog to Heroku:\r\n\r\n    $ cd ~/myblog\r\n    $ git init\r\n    $ git add .\r\n    $ git commit -m 'initial commit'\r\n    $ git push heroku\r\n\r\nThat's it. Your blog is deployed.\r\n\r\n\r\n\r\n### GitHub Project\r\n\r\nDownload or fork the package at my [github repository][1]\r\n\r\n\r\n[1]: http://github.com/georgi/shinmun\r\n[2]: http://www.matthias-georgi.de/2008/9/quick-guide-for-passenger-on-ubuntu-hardy.html\r\n[3]: http://github.com/georgi/kontrol\r\n[4]: http://coderay.rubychan.de/\r\n[5]: http://www.modrails.com/\r\n[6]: http://github.com/rack/rack\r\n[7]: http://github.com/georgi/git_store\r\n[8]: http://daringfireball.net/projects/markdown/\r\n[9]: http://textile.thresholdstate.com/\r\n[10]: http://en.wikipedia.org/wiki/Html\r\n[11]: http://www.kernel.org/pub/software/scm/git/docs/git-push.html\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Shinmun is a small file based blog engine. Write posts in your favorite editor, track them with git and deploy to Heroku. Small, fast and simple.","google":""}